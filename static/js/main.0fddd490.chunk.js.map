{"version":3,"sources":["common/styled.ts","components/Controls/RendererControls/RendererControls.tsx","components/Footer/Footer.tsx","components/Controls/ControlledSlider/ControlledSlider.tsx","components/Controls/Controls.tsx","utils/SizedToParent.tsx","utils/useDimensions.ts","components/Chart/hooks/useCallbackRef.ts","components/Chart/PIXI/PixiRenderer.ts","components/Chart/PIXI/PixiContainer.tsx","components/Chart/hooks/usePixiInstance.ts","components/Chart/SVG/D3Renderer.ts","utils/instrumentation.ts","components/Chart/SVG/D3Container.tsx","components/Chart/hooks/useD3Instance.ts","components/Chart/ChartContainer.tsx","hooks/useData.ts","components/VisualizePage/VisualizePage.tsx","hooks/UseRendererSelection.ts","components/IndexPage/IndexPage.tsx","common/theme.ts","components/App/App.tsx","index.tsx"],"names":["Renderers","Flexy","styled","div","Col","Page","Footer","memo","href","title","imageSize","width","height","RendererOptions","key","SVG","text","imageSrc","process","selectedImageSrc","Canvas","WebGL","RendererControls","selectedRender","onChange","Spacer","ChoiceGroup","selectedKey","options","label","sliderStyles","slideBox","root","display","fontFamily","titleLabel","ControlledSlider","sliderOnChange","sliderValue","sliderSettings","Slider","min","max","step","showValue","snapToStep","value","styles","Controls","onRendererChange","sliderMax","onSliderChange","ControlStyles","DEFAULT_STYLE","position","left","right","top","bottom","overflow","SizedToParent","sizedRef","onResize","children","className","style","defaultRef","useRef","ref","useMemo","dims","useState","dimensions","setDimensions","useEffect","current","rect","getBoundingClientRect","Math","floor","observer","ResizeObserver","entries","entry","newDims","contentRect","observe","disconnect","useDimensions","finalStyle","useCallbackRef","element","setElement","useCallback","node","displayName","PixiRenderer","duration","containerEl","onTransitionComplete","renderer","pixiElement","circleTexture","nodesStage","stage","initialized","spriteMap","rendererType","currDataLength","this","setRenderer","circleTemplate","PIXI","beginFill","lineStyle","drawCircle","endFill","generateTexture","NEAREST","appendChild","view","addChild","pixiRender","forceCanvas","type","CANVAS","console","log","metrics","destroy","removeChild","refresh","data","length","enter","updateTransition","forEach","sprite","x","cx","y","cy","r","tint","hex","index","renderPixi","frames","start","performance","now","requestAnimationFrame","tweenRender","newTime","percent","easeCubic","cx1","cy1","end","delta","handleInstrumentationComplete","fps","render","resize","PixiContainer","setCanvasElement","containerElement","pixiInstance","setPixiInstance","setUpPixi","instance","onRendererSwitch","undefined","getRendererType","remove","usePixiInstance","visible","PixiElement","D3Renderer","svgElementRef","select","selectAll","d","append","attr","fill","fillOpacity","transition","Promise","resolve","reject","size","tween","i","t","on","instrumentTransition","interrupt","then","D3Container","setD3ContainerElement","d3ChartContainerElement","D3Instance","setD3Instance","setUpSVG","useD3Instance","ChartContainer","lastFPS","setLastFPS","handleTransitionComplete","round","ChartStyle","parseColor","color","clean","replace","parseInt","sizeStyles","overflowY","VisualizePage","nodeCount","chartDimensions","setChartDimensions","handleResize","selectedNodeCount","setSelectedNodeCount","onSlider","val","chartData","Array","map","a","interpolatePlasma","random","rate","selectedRenderer","setSelectedRenderer","ev","option","useRendererSelection","Container","Selections","Chart","IndexPage","pinkTheme","createTheme","defaultFontStyle","fontSize","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","loadTheme","App","GlobalStyle","createGlobalStyle","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0fddd490.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Flexy = styled.div`\r\n\tflex: 1;\r\n\tdisplay: flex;\r\n`\r\n\r\nexport const Row = styled(Flexy)`\r\n\tflex-direction: row;\r\n`\r\n\r\nexport const Col = styled(Flexy)`\r\n\tflex-direction: column;\r\n`\r\n\r\nexport const Page = styled(Col)`\r\n\tposition: relative;\r\n`\r\n\r\nexport const Gutter = styled.div`\r\n\twidth: 50px;\r\n`\r\n","import * as React from 'react'\r\nimport { memo, FormEvent } from 'react'\r\nimport styled from 'styled-components'\r\nimport { IChoiceGroupOption, ChoiceGroup } from '@fluentui/react'\r\n\r\nexport enum Renderers {\r\n\tSVG = 'SVG',\r\n\tCanvas = 'Canvas',\r\n\tWebGL = 'WebGL',\r\n}\r\n\r\nconst imageSize = { width: 32, height: 32 }\r\n\r\nexport const RendererOptions: IChoiceGroupOption[] = [\r\n\t{\r\n\t\tkey: Renderers.SVG,\r\n\t\ttext: Renderers.SVG,\r\n\t\timageSrc: `${process.env.PUBLIC_URL}/images/turtle-outline.svg`,\r\n\t\tselectedImageSrc: `${process.env.PUBLIC_URL}/images/turtle.svg`,\r\n\t\timageSize,\r\n\t},\r\n\t{\r\n\t\tkey: Renderers.Canvas,\r\n\t\ttext: Renderers.Canvas,\r\n\t\timageSrc: `${process.env.PUBLIC_URL}/images/rabbit-outline.svg`,\r\n\t\tselectedImageSrc: `${process.env.PUBLIC_URL}/images/rabbit.svg`,\r\n\t\timageSize,\r\n\t},\r\n\t{\r\n\t\tkey: Renderers.WebGL,\r\n\t\ttext: Renderers.WebGL,\r\n\t\timageSrc: `${process.env.PUBLIC_URL}/images/cheetah-outline.svg`,\r\n\t\tselectedImageSrc: `${process.env.PUBLIC_URL}/images/cheetah.svg`,\r\n\t\timageSize,\r\n\t},\r\n]\r\n\r\ninterface RendererControlsProps {\r\n\tselectedRender: string\r\n\tonChange: (\r\n\t\tev: FormEvent<HTMLElement | HTMLInputElement> | undefined,\r\n\t\toption?: IChoiceGroupOption,\r\n\t) => void\r\n}\r\nexport const RendererControls: React.FC<RendererControlsProps> = memo(\r\n\tfunction RendererControls({ selectedRender, onChange }) {\r\n\t\treturn (\r\n\t\t\t<Spacer>\r\n\t\t\t\t<ChoiceGroup\r\n\t\t\t\t\tselectedKey={selectedRender}\r\n\t\t\t\t\toptions={RendererOptions}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tlabel=\"Renderer\"\r\n\t\t\t\t/>\r\n\t\t\t</Spacer>\r\n\t\t)\r\n\t},\r\n)\r\n\r\nconst Spacer = styled.div`\r\n\tmargin-left: 10px;\r\n\tdisplay: inline-table;\r\n\tfont-family: 'Gaegu', cursive;\r\n`\r\n","import React, { memo } from 'react'\r\n\r\nexport const Footer: React.FC = memo(function Footer() {\r\n\treturn (\r\n\t\t<span>\r\n\t\t\tIcons made by{' '}\r\n\t\t\t<a href=\"https://www.flaticon.com/authors/freepik\" title=\"freepik\">\r\n\t\t\t\tFreepik\r\n\t\t\t</a>{' '}\r\n\t\t\tfrom{' '}\r\n\t\t\t<a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n\t\t\t\twww.flaticon.com\r\n\t\t\t</a>\r\n\t\t</span>\r\n\t)\r\n})\r\n","import React, { memo } from 'react'\r\nimport { Slider, ISliderStyles } from '@fluentui/react'\r\nimport styled from 'styled-components'\r\nexport interface SliderSettings {\r\n\tmin: number\r\n\tmax: number\r\n}\r\ninterface ControlledSliderProps {\r\n\tsliderOnChange: (value: number) => void\r\n\tsliderValue: number\r\n\tsliderSettings: SliderSettings\r\n}\r\n\r\nconst sliderStyles: Partial<ISliderStyles> = {\r\n\tslideBox: { width: 300 },\r\n\troot: { display: 'inline-table', fontFamily: \"'Gaegu', cursive\" },\r\n\ttitleLabel: { fontFamily: \"'Gaegu', cursive\" },\r\n}\r\n\r\nexport const ControlledSlider: React.FC<ControlledSliderProps> = memo(\r\n\tfunction ControlledSlider({\r\n\t\tsliderOnChange,\r\n\t\tsliderValue,\r\n\t\tsliderSettings,\r\n\t}: ControlledSliderProps) {\r\n\t\treturn (\r\n\t\t\t<Spacer>\r\n\t\t\t\t<Slider\r\n\t\t\t\t\tlabel=\"Adjust node count\"\r\n\t\t\t\t\tmin={sliderSettings.min}\r\n\t\t\t\t\tmax={sliderSettings.max}\r\n\t\t\t\t\tstep={1000}\r\n\t\t\t\t\tshowValue={true}\r\n\t\t\t\t\tsnapToStep={true}\r\n\t\t\t\t\tvalue={sliderValue}\r\n\t\t\t\t\tonChange={sliderOnChange}\r\n\t\t\t\t\tstyles={sliderStyles}\r\n\t\t\t\t/>\r\n\t\t\t</Spacer>\r\n\t\t)\r\n\t},\r\n)\r\n\r\nconst Spacer = styled.div`\r\n\tmargin-left: 10px;\r\n\tdisplay: inline-table;\r\n`\r\n","import React, { memo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { IChoiceGroupOption } from '@fluentui/react'\r\nimport { RendererControls } from './RendererControls'\r\nimport { ControlledSlider } from './ControlledSlider'\r\n\r\ninterface ControlsProps {\r\n\tselectedRender: string\r\n\tonRendererChange: (\r\n\t\tev: React.FormEvent<HTMLElement | HTMLInputElement> | undefined,\r\n\t\toption?: IChoiceGroupOption,\r\n\t) => void\r\n\tsliderMax: number\r\n\tonSliderChange: (val: number) => void\r\n}\r\n\r\nexport const Controls: React.FC<any> = memo(function Controls({\r\n\tselectedRender,\r\n\tonRendererChange,\r\n\tsliderMax,\r\n\tonSliderChange,\r\n}: ControlsProps) {\r\n\treturn (\r\n\t\t<ControlStyles>\r\n\t\t\t<RendererControls\r\n\t\t\t\tselectedRender={selectedRender}\r\n\t\t\t\tonChange={onRendererChange}\r\n\t\t\t/>\r\n\t\t\t<ControlledSlider\r\n\t\t\t\tsliderValue={sliderMax}\r\n\t\t\t\tsliderOnChange={onSliderChange}\r\n\t\t\t\tsliderSettings={{ min: 500, max: 10000 }}\r\n\t\t\t/>\r\n\t\t</ControlStyles>\r\n\t)\r\n})\r\n\r\nconst ControlStyles = styled.div`\r\n\tdisplay: 'inline-flex';\r\n\tmargin-left: 100px;\r\n`\r\n","import React, {\r\n\tmemo,\r\n\tuseEffect,\r\n\tuseRef,\r\n\tMutableRefObject,\r\n\tuseMemo,\r\n} from 'react'\r\nimport { useDimensions } from './useDimensions'\r\nimport { SizedToParentProps } from './types'\r\n\r\nconst DEFAULT_STYLE = {\r\n\t/* position: absolute so we don't cause the parent element to continually expand */\r\n\tposition: 'absolute',\r\n\tleft: 0,\r\n\tright: 0,\r\n\ttop: 0,\r\n\tbottom: 0,\r\n\toverflow: 'hidden',\r\n} as React.CSSProperties\r\n\r\n/**\r\n * Provides an element that is sized to its parent, without affecting the size of the parent.\r\n * It works by creating an element that is out of the layout flow (using position: absolute).\r\n *\r\n * Children should be styled with 'width: 100%, height: 100%' or use the onResize event listener to control the size of children or some other combination\r\n */\r\nexport const SizedToParent: React.FC<SizedToParentProps> = memo(\r\n\t({ sizedRef, onResize, children, className, style }: SizedToParentProps) => {\r\n\t\tconst defaultRef = useRef(null)\r\n\t\tconst ref: MutableRefObject<HTMLElement | null> = useMemo(\r\n\t\t\t() => sizedRef || defaultRef,\r\n\t\t\t[defaultRef, sizedRef],\r\n\t\t)\r\n\t\tconst dims = useDimensions(ref)\r\n\t\tuseEffect(() => {\r\n\t\t\tif (ref && dims && onResize) {\r\n\t\t\t\tonResize(dims)\r\n\t\t\t}\r\n\t\t}, [ref, dims, onResize])\r\n\t\tconst finalStyle = useMemo(\r\n\t\t\t() => ({\r\n\t\t\t\t...DEFAULT_STYLE,\r\n\t\t\t\t...(style || {}),\r\n\t\t\t}),\r\n\t\t\t[style],\r\n\t\t)\r\n\r\n\t\treturn (\r\n\t\t\t<div className={className} ref={ref as any} style={finalStyle}>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t)\r\n\t},\r\n)\r\nSizedToParent.displayName = 'SizedToParent'\r\n","import { useState, MutableRefObject, useEffect } from 'react'\r\nimport ResizeObserver from 'resize-observer-polyfill'\r\nimport { Dimensions } from './types'\r\n\r\n/**\r\n * A hook for getting the dimensions of the given element\r\n * This hook also updates when the given element resizes\r\n * @param ref A ref to the element to measure\r\n * @returns The dimensions for the element.\r\n */\r\nexport function useDimensions(\r\n\tref: MutableRefObject<HTMLElement | null>,\r\n): Dimensions | undefined {\r\n\tconst [dimensions, setDimensions] = useState<Dimensions | undefined>()\r\n\tuseEffect(() => {\r\n\t\tif (ref && ref.current) {\r\n\t\t\tconst rect = ref.current.getBoundingClientRect()\r\n\t\t\tlet dims: Dimensions = {\r\n\t\t\t\twidth: Math.floor(rect.width),\r\n\t\t\t\theight: Math.floor(rect.height),\r\n\t\t\t}\r\n\t\t\tsetDimensions(dims)\r\n\r\n\t\t\tconst observer = new ResizeObserver(entries => {\r\n\t\t\t\tconst entry = entries[0]\r\n\t\t\t\tif (entry) {\r\n\t\t\t\t\tconst newDims = {\r\n\t\t\t\t\t\twidth: Math.floor(entry.contentRect.width),\r\n\t\t\t\t\t\theight: Math.floor(entry.contentRect.height),\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (newDims.width !== dims.width || newDims.height !== dims.height) {\r\n\t\t\t\t\t\tdims = newDims\r\n\t\t\t\t\t\tsetDimensions(newDims)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tobserver.observe(ref.current)\r\n\t\t\treturn () => {\r\n\t\t\t\tobserver.disconnect()\r\n\t\t\t}\r\n\t\t}\r\n\t}, [ref])\r\n\treturn dimensions as Dimensions | undefined\r\n}\r\n","import { useState, useCallback } from 'react'\r\n\r\n/**\r\n * Use a callback-based element reference. This is useful when the\r\n * element is required for in-band rendering or effectful measuring.\r\n *\r\n */\r\nexport function useCallbackRef<T>(): [(ref: T) => void, T | null] {\r\n\tconst [element, setElement] = useState<T | null>(null)\r\n\tconst refCb = useCallback((node: T) => setElement(node), [setElement])\r\n\treturn [refCb, element]\r\n}\r\n","import * as PIXI from 'pixi.js'\r\nimport { easeCubic } from 'd3-ease'\r\nimport { Data } from '../../../hooks/useData'\r\nimport { Dimensions } from '../../../utils/types'\r\nimport { Renderers } from '../../Controls/RendererControls'\r\n\r\n// @ts-ignore\r\nexport * from 'pixi.js-legacy'\r\n// @ts-ignore\r\nexport * from '@pixi/canvas-renderer'\r\n\r\ninterface SpriteMap {\r\n\t[key: string]: PIXI.Sprite\r\n}\r\n\r\nclass PixiRenderer {\r\n\tprivate pixiElement: HTMLElement\r\n\tprivate renderer: PIXI.Renderer | PIXI.CanvasRenderer\r\n\tprivate circleTexture: PIXI.Texture\r\n\tprivate nodesStage: PIXI.Container\r\n\tprivate stage: PIXI.Container\r\n\tprivate dimensions: Dimensions\r\n\tprivate duration: number\r\n\tprivate initialized = false\r\n\tprivate spriteMap: SpriteMap = {}\r\n\tprivate rendererType: Renderers\r\n\tprivate currDataLength = 0\r\n\tprivate onTransitionComplete?: (metrics: any) => void\r\n\r\n\tconstructor(\r\n\t\twidth: number,\r\n\t\theight: number,\r\n\t\tduration: number,\r\n\t\tcontainerEl: HTMLDivElement,\r\n\t\tonTransitionComplete: (metrics: any) => void,\r\n\t\trenderer: Renderers,\r\n\t) {\r\n\t\tthis.currDataLength = 0\r\n\t\tthis.pixiElement = containerEl\r\n\t\tthis.initialized = false\r\n\t\tthis.rendererType = renderer\r\n\t\tthis.duration = duration\r\n\t\tthis.dimensions = { height, width }\r\n\t\tthis.onTransitionComplete = onTransitionComplete\r\n\r\n\t\t// ==== set up pixi stuff\r\n\t\tthis.renderer = this.setRenderer(renderer, this.dimensions)\r\n\t\tconst circleTemplate = new PIXI.Graphics()\r\n\t\t\t.beginFill(0xffffff)\r\n\t\t\t.lineStyle(0)\r\n\t\t\t.drawCircle(0, 0, 10)\r\n\t\t\t.endFill()\r\n\t\tthis.circleTexture = this.renderer.generateTexture(\r\n\t\t\tcircleTemplate,\r\n\t\t\tPIXI.SCALE_MODES.NEAREST,\r\n\t\t\twidth / height,\r\n\t\t)\r\n\t\t// alternatively we could texture from image\r\n\t\t// this.circleTexture = PIXI.Texture.from('/images/cheetah.svg')\r\n\t\tthis.pixiElement.appendChild(this.renderer.view)\r\n\t\tthis.nodesStage = new PIXI.Container()\r\n\t\tthis.stage = new PIXI.Container()\r\n\t\tthis.stage.addChild(this.nodesStage)\r\n\t}\r\n\r\n\tprivate setRenderer(renderer: Renderers, dimensions: Dimensions) {\r\n\t\t// Renderer will choose webGL if supported and failover to canvas\r\n\t\t// For only canvas renderer use forceCanvas option but only supported with pixi-legacy module\r\n\t\t// alternatively can use PIXI.Application\r\n\r\n\t\tconst pixiRender = PIXI.autoDetectRenderer({\r\n\t\t\twidth: dimensions.width,\r\n\t\t\theight: dimensions.height,\r\n\t\t\tforceCanvas: renderer === Renderers.Canvas,\r\n\t\t})\r\n\t\tconst rendererType =\r\n\t\t\tpixiRender.type === PIXI.RENDERER_TYPE.CANVAS ? 'CANVAS' : 'WEBGL'\r\n\t\tconsole.log('pixiRenderer', rendererType)\r\n\t\treturn pixiRender\r\n\t}\r\n\r\n\tpublic getRendererType(): Renderers {\r\n\t\treturn this.rendererType\r\n\t}\r\n\r\n\tprivate handleInstrumentationComplete(metrics: any) {\r\n\t\tif (this.onTransitionComplete) {\r\n\t\t\tthis.onTransitionComplete(metrics)\r\n\t\t}\r\n\t}\r\n\r\n\tpublic remove(): void {\r\n\t\tif (this.renderer) {\r\n\t\t\tthis.stage.destroy({ children: true })\r\n\t\t\tthis.pixiElement.removeChild(this.renderer.view)\r\n\t\t\tthis.renderer.destroy(true)\r\n\t\t\tthis.refresh()\r\n\t\t}\r\n\t}\r\n\r\n\tprivate refresh(): void {\r\n\t\tthis.initialized = false\r\n\t\tthis.spriteMap = {}\r\n\t\tthis.stage.removeChild(this.nodesStage)\r\n\t\tthis.nodesStage = new PIXI.Container()\r\n\t\tthis.stage.addChild(this.nodesStage)\r\n\t}\r\n\r\n\tpublic onRendererSwitch(data: Data[]): void {\r\n\t\tif (this.currDataLength !== data.length) {\r\n\t\t\tthis.refresh()\r\n\t\t\tthis.currDataLength = data.length\r\n\t\t}\r\n\t\tif (!this.initialized) {\r\n\t\t\tthis.enter(data)\r\n\t\t\tthis.initialized = true\r\n\t\t\tthis.updateTransition(data)\r\n\t\t} else {\r\n\t\t\tthis.updateTransition(data)\r\n\t\t}\r\n\t}\r\n\tprivate enter(data: Data[]): void {\r\n\t\tconst stage = this.nodesStage\r\n\t\tdata.forEach(node => {\r\n\t\t\tconst sprite = new PIXI.Sprite(this.circleTexture)\r\n\t\t\tsprite.x = node.cx\r\n\t\t\tsprite.y = node.cy\r\n\t\t\tsprite.width = node.r * 2\r\n\t\t\tsprite.height = node.r * 2\r\n\t\t\tsprite.tint = node.hex\r\n\t\t\tthis.spriteMap[`${node.index}`] = sprite\r\n\t\t\tstage.addChild(sprite)\r\n\t\t})\r\n\t\tthis.renderPixi()\r\n\t}\r\n\r\n\tprivate updateTransition(data: Data[]) {\r\n\t\tlet frames = 0\r\n\t\tconst tweenRender = (newTime: number) => {\r\n\t\t\tconst deltaTime = newTime - start\r\n\t\t\tconst percent = deltaTime / this.duration\r\n\t\t\tdata.forEach(node => {\r\n\t\t\t\tconst sprite = this.spriteMap[`${node.index}`] as PIXI.Sprite\r\n\t\t\t\t// percent * (current - prev) + prev\r\n\t\t\t\tconst cx = easeCubic(percent) * (node.cx1 - node.cx) + node.cx\r\n\t\t\t\tconst cy = easeCubic(percent) * (node.cy1 - node.cy) + node.cy\r\n\t\t\t\tsprite.x = cx\r\n\t\t\t\tsprite.y = cy\r\n\t\t\t\tsprite.width = node.r * 2\r\n\t\t\t\tsprite.height = node.r * 2\r\n\t\t\t})\r\n\t\t\tframes++\r\n\t\t\tthis.renderPixi()\r\n\t\t\tif (percent < 1.0) {\r\n\t\t\t\trequestAnimationFrame(tweenRender)\r\n\t\t\t} else {\r\n\t\t\t\t// calculate fps metrics\r\n\t\t\t\tconst end = performance.now()\r\n\t\t\t\tconst delta = end - start\r\n\t\t\t\tthis.handleInstrumentationComplete({\r\n\t\t\t\t\tstart,\r\n\t\t\t\t\tend,\r\n\t\t\t\t\tdelta,\r\n\t\t\t\t\tframes,\r\n\t\t\t\t\tfps: frames / (delta / 1000),\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst start = performance.now()\r\n\t\trequestAnimationFrame(tweenRender)\r\n\t}\r\n\tprivate renderPixi(): void {\r\n\t\tthis.renderer.render(this.stage)\r\n\t}\r\n\r\n\tpublic resize(width: number, height: number): void {\r\n\t\tthis.dimensions.height = height\r\n\t\tthis.dimensions.width = width\r\n\t\tif (this.renderer) {\r\n\t\t\tthis.renderer.resize(width, height)\r\n\t\t}\r\n\t}\r\n}\r\nexport default PixiRenderer\r\n","import React, { memo, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Data } from '../../../hooks/useData'\r\nimport { useCallbackRef } from '../hooks/useCallbackRef'\r\nimport { usePixiInstance } from '../hooks/usePixiInstance'\r\nimport { Renderers } from '../../Controls/RendererControls'\r\n\r\nexport interface PixiContainerProps {\r\n\tdata: Data[]\r\n\twidth: number\r\n\theight: number\r\n\tduration: number\r\n\trenderer: Renderers\r\n\tonTransitionComplete: (metrics: any) => void\r\n}\r\n\r\nexport const PixiContainer: React.FC<PixiContainerProps> = memo(\r\n\tfunction PixiContainer({\r\n\t\tdata,\r\n\t\twidth,\r\n\t\theight,\r\n\t\tduration,\r\n\t\trenderer,\r\n\t\tonTransitionComplete,\r\n\t}: PixiContainerProps) {\r\n\t\tconst [setCanvasElement, canvasElement] = useCallbackRef<HTMLDivElement>()\r\n\t\t// setup pixi instance\r\n\t\tusePixiInstance({\r\n\t\t\tdata,\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\tcontainerElement: canvasElement,\r\n\t\t\tduration,\r\n\t\t\tonTransitionComplete,\r\n\t\t\trenderer,\r\n\t\t})\r\n\r\n\t\tconst style: React.CSSProperties = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\t({\r\n\t\t\t\t\tvisible:\r\n\t\t\t\t\t\trenderer === Renderers.Canvas || renderer === Renderers.WebGL\r\n\t\t\t\t\t\t\t? 'visible'\r\n\t\t\t\t\t\t\t: 'hidden',\r\n\t\t\t\t} as React.CSSProperties),\r\n\t\t\t[renderer],\r\n\t\t)\r\n\t\treturn (\r\n\t\t\t<PixiElement\r\n\t\t\t\tref={setCanvasElement}\r\n\t\t\t\tclassName=\"canvas-ref\"\r\n\t\t\t\tstyle={style}\r\n\t\t\t/>\r\n\t\t)\r\n\t},\r\n)\r\n\r\nconst PixiElement = styled.div`\r\n\tposition: absolute;\r\n`\r\n","import { useState, useEffect, useMemo, useCallback } from 'react'\r\nimport PixiRenderer from '../PIXI/PixiRenderer'\r\nimport { Dimensions } from '../../../utils/types'\r\nimport { Data } from '../../../hooks/useData'\r\nimport { Renderers } from '../../Controls/RendererControls'\r\n\r\nexport interface PixiInstance {\r\n\tdata: Data[]\r\n\tcontainerElement: HTMLDivElement | null\r\n\twidth: number\r\n\theight: number\r\n\tduration: number\r\n\trenderer: Renderers\r\n\tonTransitionComplete: (metrics: any) => void\r\n}\r\n\r\nexport function usePixiInstance({\r\n\tdata,\r\n\twidth,\r\n\theight,\r\n\tcontainerElement,\r\n\tduration,\r\n\trenderer,\r\n\tonTransitionComplete,\r\n}: PixiInstance): PixiRenderer | undefined {\r\n\tconst [pixiInstance, setPixiInstance] = useState<PixiRenderer | undefined>()\r\n\r\n\t// resize canvas on dimension change\r\n\tconst dimensions: Dimensions = useMemo(() => {\r\n\t\tif (pixiInstance) {\r\n\t\t\tpixiInstance.resize(width, height)\r\n\t\t}\r\n\t\treturn { width, height }\r\n\t}, [width, height, pixiInstance])\r\n\r\n\tconst setUpPixi = useCallback(\r\n\t\t(instance?: PixiRenderer) => {\r\n\t\t\tif (renderer !== Renderers.SVG) {\r\n\t\t\t\tlet pixiInstance = instance\r\n\t\t\t\tif (!pixiInstance && containerElement !== null) {\r\n\t\t\t\t\tpixiInstance = new PixiRenderer(\r\n\t\t\t\t\t\tdimensions.width,\r\n\t\t\t\t\t\tdimensions.height,\r\n\t\t\t\t\t\tduration,\r\n\t\t\t\t\t\tcontainerElement,\r\n\t\t\t\t\t\tonTransitionComplete,\r\n\t\t\t\t\t\trenderer,\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsetPixiInstance(pixiInstance)\r\n\t\t\t\t}\r\n\t\t\t\tif (pixiInstance) {\r\n\t\t\t\t\tpixiInstance.onRendererSwitch(data)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsetPixiInstance(undefined)\r\n\t\t\t}\r\n\t\t},\r\n\t\t[\r\n\t\t\tcontainerElement,\r\n\t\t\tdimensions,\r\n\t\t\tduration,\r\n\t\t\tdata,\r\n\t\t\trenderer,\r\n\t\t\tonTransitionComplete,\r\n\t\t],\r\n\t)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (pixiInstance) {\r\n\t\t\tconst currentRenderer = pixiInstance.getRendererType()\r\n\t\t\tif (currentRenderer !== renderer) {\r\n\t\t\t\tpixiInstance.remove()\r\n\t\t\t\tsetUpPixi()\r\n\t\t\t} else {\r\n\t\t\t\tpixiInstance.onRendererSwitch(data)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetUpPixi(pixiInstance)\r\n\t\t}\r\n\t}, [pixiInstance, renderer, setUpPixi, data])\r\n\r\n\treturn pixiInstance\r\n}\r\n","import { select } from 'd3-selection'\r\nimport 'd3-transition'\r\nimport { Data } from '../../../hooks/useData'\r\nimport { instrumentTransition } from '../../../utils/instrumentation'\r\n\r\nexport interface D3RendererProps {\r\n\tduration: number\r\n\tsvgElementRef: SVGElement\r\n\tonTransitionComplete: (metrics: any) => void\r\n}\r\n\r\nexport class D3Renderer {\r\n\tprivate duration = 1000\r\n\tprivate svgElementRef: SVGElement\r\n\tprivate initialized = false\r\n\tprivate currDataLength = 0\r\n\tprivate onTransitionComplete: (metrics: any) => void\r\n\r\n\tconstructor({\r\n\t\tduration,\r\n\t\tonTransitionComplete,\r\n\t\tsvgElementRef,\r\n\t}: D3RendererProps) {\r\n\t\tthis.duration = duration\r\n\t\tthis.onTransitionComplete = onTransitionComplete\r\n\t\tthis.svgElementRef = svgElementRef\r\n\t}\r\n\r\n\tprivate handleInstrumentationComplete(metrics: any) {\r\n\t\tif (this.onTransitionComplete) {\r\n\t\t\tthis.onTransitionComplete(metrics)\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onRendererSwitch(data: Data[]) {\r\n\t\tif (this.currDataLength !== data.length) {\r\n\t\t\tthis.remove()\r\n\t\t\tthis.currDataLength = data.length\r\n\t\t}\r\n\t\tif (!this.initialized) {\r\n\t\t\tthis.enter(data)\r\n\t\t\tthis.initialized = true\r\n\t\t\tthis.updateTransition(data)\r\n\t\t} else {\r\n\t\t\tthis.updateTransition(data)\r\n\t\t}\r\n\t}\r\n\r\n\tprivate enter(data: Data[]) {\r\n\t\tconst svg = select(this.svgElementRef)\r\n\t\treturn svg\r\n\t\t\t.selectAll('.d3-node')\r\n\t\t\t.data(data, (d: any) => d.index)\r\n\t\t\t.enter()\r\n\t\t\t.append('circle')\r\n\t\t\t.attr('class', 'd3-node')\r\n\t\t\t.attr('cx', (d: Data) => d.cx)\r\n\t\t\t.attr('cy', (d: Data) => d.cy)\r\n\t\t\t.attr('r', (d: Data) => d.r)\r\n\t\t\t.attr('fill', (d: Data) => d.fill)\r\n\t\t\t.attr('fill-opacity', (d: Data) => d.fillOpacity)\r\n\t}\r\n\r\n\tprivate updateTransition(data: Data[]) {\r\n\t\tconst svg = select(this.svgElementRef)\r\n\t\tconst transition = svg\r\n\t\t\t.selectAll('.d3-node')\r\n\t\t\t.data(data, (d: any) => d.index)\r\n\t\t\t.interrupt()\r\n\t\t\t.transition()\r\n\t\t\t.duration(this.duration)\r\n\t\t\t.attr('cx', (d: Data) => d.cx1)\r\n\t\t\t.attr('cy', (d: Data) => d.cy1)\r\n\r\n\t\tinstrumentTransition(transition).then(metrics =>\r\n\t\t\tthis.handleInstrumentationComplete(metrics),\r\n\t\t)\r\n\t}\r\n\r\n\tpublic remove() {\r\n\t\tconst svg = select(this.svgElementRef)\r\n\t\tsvg.selectAll('*').remove()\r\n\t\tthis.initialized = false\r\n\t}\r\n}\r\n","/**\r\n * Instruments a d3 transition by hooking into the tween factory.\r\n * See: https://github.com/d3/d3-transition#control-flow\r\n * When you specify a tween function, you provide a factory that is called for each element.\r\n * That factory is expected to return an easing function to tween the element, which is called at each frame.\r\n * It is called for each element in the selection, so we're using the selection size to trigger updates when the last one is called for each frame.\r\n * This lets us track the frame count, and binding to the transition's end event (also looking for last element) let's us determine when it is complete.\r\n */\r\nexport const instrumentTransition = (transition: any) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tlet frames = 0\r\n\t\tconst start = performance.now()\r\n\t\tconst size = transition.size()\r\n\t\ttransition\r\n\t\t\t.tween('_framerate_', (d: any, i: number) => {\r\n\t\t\t\treturn (t: any) => {\r\n\t\t\t\t\tif (i === size - 1) {\r\n\t\t\t\t\t\tframes++\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.on('end.instrument', (d: any, i: number) => {\r\n\t\t\t\tif (i === size - 1) {\r\n\t\t\t\t\tconst end = performance.now()\r\n\t\t\t\t\tconst delta = end - start\r\n\t\t\t\t\tresolve({\r\n\t\t\t\t\t\tstart,\r\n\t\t\t\t\t\tend,\r\n\t\t\t\t\t\tdelta,\r\n\t\t\t\t\t\tframes,\r\n\t\t\t\t\t\tfps: frames / (delta / 1000),\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t})\r\n}\r\n","import React, { memo, useMemo } from 'react'\r\nimport { useCallbackRef } from '../hooks/useCallbackRef'\r\nimport { Data } from '../../../hooks/useData'\r\nimport { Renderers } from '../../Controls/RendererControls'\r\nimport { useD3Instance } from '../hooks/useD3Instance'\r\nexport interface D3RendererProps {\r\n\tdata: Data[]\r\n\tduration: number\r\n\trenderer: Renderers\r\n\twidth: number\r\n\theight: number\r\n\tonTransitionComplete: (metrics: any) => void\r\n}\r\nexport const D3Container: React.FC<D3RendererProps> = memo(\r\n\tfunction D3Container({\r\n\t\tdata,\r\n\t\tduration,\r\n\t\trenderer,\r\n\t\twidth,\r\n\t\theight,\r\n\t\tonTransitionComplete,\r\n\t}: D3RendererProps) {\r\n\t\t// Get Refs for SVG Elements\r\n\t\tconst [setD3ContainerElement, d3ChartContainerElement] = useCallbackRef<\r\n\t\t\tSVGGElement\r\n\t\t>()\r\n\r\n\t\tuseD3Instance({\r\n\t\t\tdata,\r\n\t\t\tduration,\r\n\t\t\trenderer,\r\n\t\t\tcontainerElement: d3ChartContainerElement,\r\n\t\t\tonTransitionComplete,\r\n\t\t})\r\n\r\n\t\tconst style = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\t({\r\n\t\t\t\t\tvisible: renderer === Renderers.SVG ? 'visible' : 'hidden',\r\n\t\t\t\t} as React.CSSProperties),\r\n\t\t\t[renderer],\r\n\t\t)\r\n\r\n\t\treturn (\r\n\t\t\t<div style={style}>\r\n\t\t\t\t<svg width={width} height={height}>\r\n\t\t\t\t\t<g ref={setD3ContainerElement} className=\"svg-test\"></g>\r\n\t\t\t\t</svg>\r\n\t\t\t</div>\r\n\t\t)\r\n\t},\r\n)\r\n","import { useState, useEffect, useCallback } from 'react'\r\nimport { Data } from '../../../hooks/useData'\r\nimport { Renderers } from '../../Controls/RendererControls'\r\nimport PixiRenderer from '../PIXI/PixiRenderer'\r\nimport { D3Renderer } from '../SVG/D3Renderer'\r\n\r\nexport interface D3Instance {\r\n\tdata: Data[]\r\n\tcontainerElement: SVGGElement | null\r\n\tduration: number\r\n\trenderer: Renderers\r\n\tonTransitionComplete: (metrics: any) => void\r\n}\r\n\r\nexport function useD3Instance({\r\n\tdata,\r\n\tcontainerElement,\r\n\tduration,\r\n\trenderer,\r\n\tonTransitionComplete,\r\n}: D3Instance): D3Renderer | undefined {\r\n\tconst [D3Instance, setD3Instance] = useState<D3Renderer | undefined>()\r\n\r\n\tconst setUpSVG = useCallback(\r\n\t\t(instance?: PixiRenderer) => {\r\n\t\t\tif (!instance && containerElement !== null) {\r\n\t\t\t\tconst D3Instance = new D3Renderer({\r\n\t\t\t\t\tduration,\r\n\t\t\t\t\tonTransitionComplete,\r\n\t\t\t\t\tsvgElementRef: containerElement,\r\n\t\t\t\t})\r\n\t\t\t\tsetD3Instance(D3Instance)\r\n\t\t\t}\r\n\t\t},\r\n\t\t[containerElement, duration, onTransitionComplete],\r\n\t)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (D3Instance) {\r\n\t\t\tif (renderer !== Renderers.SVG) {\r\n\t\t\t\tD3Instance.remove()\r\n\t\t\t} else {\r\n\t\t\t\tD3Instance.onRendererSwitch(data)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetUpSVG(D3Instance)\r\n\t\t}\r\n\t}, [D3Instance, renderer, setUpSVG, data])\r\n\r\n\treturn D3Instance\r\n}\r\n","import React, { memo, useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Renderers } from '../Controls/RendererControls/RendererControls'\r\nimport { Data } from '../../hooks/useData'\r\nimport { PixiContainer } from './PIXI/PixiContainer'\r\nimport { D3Container } from './SVG/D3Container'\r\n\r\nconst DURATION = 1000\r\nexport interface ChartContainerProps {\r\n\tdata: Data[]\r\n\twidth: number\r\n\theight: number\r\n\trenderer: Renderers\r\n}\r\n\r\nexport const ChartContainer: React.FC<ChartContainerProps> = memo(\r\n\tfunction ChartContainer({\r\n\t\tdata,\r\n\t\twidth,\r\n\t\theight,\r\n\t\trenderer,\r\n\t}: ChartContainerProps) {\r\n\t\tconst [lastFPS, setLastFPS] = useState<number>(0)\r\n\r\n\t\tconst handleTransitionComplete = useCallback(\r\n\t\t\t(metrics: any) => {\r\n\t\t\t\tsetLastFPS(metrics.fps)\r\n\t\t\t},\r\n\t\t\t[setLastFPS],\r\n\t\t)\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className={'fps'}>{`${Math.round(lastFPS)} FPS`}</div>\r\n\r\n\t\t\t\t<ChartStyle>\r\n\t\t\t\t\t<PixiContainer\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\twidth={width}\r\n\t\t\t\t\t\theight={height}\r\n\t\t\t\t\t\tduration={DURATION}\r\n\t\t\t\t\t\trenderer={renderer}\r\n\t\t\t\t\t\tonTransitionComplete={handleTransitionComplete}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<D3Container\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\twidth={width}\r\n\t\t\t\t\t\theight={height}\r\n\t\t\t\t\t\tduration={DURATION}\r\n\t\t\t\t\t\trenderer={renderer}\r\n\t\t\t\t\t\tonTransitionComplete={handleTransitionComplete}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ChartStyle>\r\n\t\t\t</>\r\n\t\t)\r\n\t},\r\n)\r\n\r\nconst ChartStyle = styled.div`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tposition: relative;\r\n\tdisplay: inline-flex;\r\n`\r\n","import { useMemo } from 'react'\r\nimport { interpolatePlasma } from 'd3-scale-chromatic'\r\nimport { Dimensions } from '../utils/types'\r\n\r\nconst MAX_RADIUS = 8\r\nconst MAX_RATE = 10\r\n\r\nexport interface Data {\r\n\tindex: number\r\n\trate: number\r\n\tr: number\r\n\tfillOpacity: number\r\n\tcx: number\r\n\tcy: number\r\n\tcx1: number\r\n\tcy1: number\r\n\tfill: string\r\n\thex: number\r\n}\r\n\r\nexport function useData(nodeCount: number, dimensions?: Dimensions): Data[] {\r\n\treturn useMemo(() => {\r\n\t\tif (dimensions) {\r\n\t\t\tconst { height, width } = dimensions\r\n\t\t\tconst dataset = new Array(nodeCount).fill(1).map((a, index) => {\r\n\t\t\t\tconst color = interpolatePlasma(Math.random())\r\n\t\t\t\treturn {\r\n\t\t\t\t\tindex,\r\n\t\t\t\t\trate: 1 + Math.random() * MAX_RATE,\r\n\t\t\t\t\tr: 1 + Math.random() * MAX_RADIUS,\r\n\t\t\t\t\tfillOpacity: 1.0,\r\n\t\t\t\t\tcx: Math.random() * width,\r\n\t\t\t\t\tcy: Math.random() * height,\r\n\t\t\t\t\tcx1: Math.random() * width,\r\n\t\t\t\t\tcy1: Math.random() * height,\r\n\t\t\t\t\tfill: color,\r\n\t\t\t\t\thex: parseColor(color),\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn dataset\r\n\t\t}\r\n\t\treturn []\r\n\t}, [nodeCount, dimensions])\r\n}\r\n\r\nconst parseColor = (color: string) => {\r\n\tconst clean = color.replace('#', '')\r\n\treturn parseInt(clean, 16)\r\n}\r\n","import React, { memo, useCallback, useState } from 'react'\r\nimport { Page } from '../../common/styled'\r\nimport styled from 'styled-components'\r\nimport { Footer } from '../Footer'\r\nimport { Controls } from '../Controls/Controls'\r\nimport { SizedToParent } from '../../utils/SizedToParent'\r\nimport { Dimensions } from '../../utils/types'\r\nimport { ChartContainer } from '../Chart/'\r\nimport { useRendererSelection } from '../../hooks/UseRendererSelection'\r\nimport { useData } from '../../hooks/useData'\r\nconst sizeStyles = { overflowY: 'hidden' } as React.CSSProperties\r\n\r\nexport const VisualizePage: React.FC<any> = memo(function VisualizePage() {\r\n\t// get dimensions from ref\r\n\tconst [chartDimensions, setChartDimensions] = useState<\r\n\t\tDimensions | undefined\r\n\t>(undefined)\r\n\r\n\tconst handleResize = useCallback(\r\n\t\t({ width, height }: Dimensions) => {\r\n\t\t\tsetChartDimensions({ width, height })\r\n\t\t},\r\n\t\t[setChartDimensions],\r\n\t)\r\n\r\n\tconst [selectedNodeCount, setSelectedNodeCount] = useState<number>(2000)\r\n\tconst onSlider = useCallback(\r\n\t\t(val: number) => {\r\n\t\t\tsetSelectedNodeCount(val)\r\n\t\t},\r\n\t\t[setSelectedNodeCount],\r\n\t)\r\n\r\n\tconst chartData = useData(selectedNodeCount, chartDimensions)\r\n\r\n\tconst [selectedRenderer, onRendererChange] = useRendererSelection()\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Selections>\r\n\t\t\t\t<Controls\r\n\t\t\t\t\tselectedRender={selectedRenderer}\r\n\t\t\t\t\tonRendererChange={onRendererChange}\r\n\t\t\t\t\tonSliderChange={onSlider}\r\n\t\t\t\t\tsliderMax={selectedNodeCount}\r\n\t\t\t\t/>\r\n\t\t\t</Selections>\r\n\t\t\t<Chart>\r\n\t\t\t\t<SizedToParent style={sizeStyles} onResize={handleResize}>\r\n\t\t\t\t\t{chartData.length > 0 && chartDimensions ? (\r\n\t\t\t\t\t\t<ChartContainer\r\n\t\t\t\t\t\t\twidth={chartDimensions.width}\r\n\t\t\t\t\t\t\theight={chartDimensions.height}\r\n\t\t\t\t\t\t\tdata={chartData}\r\n\t\t\t\t\t\t\trenderer={selectedRenderer}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<></>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</SizedToParent>\r\n\t\t\t</Chart>\r\n\t\t\t<Footer />\r\n\t\t</Container>\r\n\t)\r\n})\r\n\r\nconst Container = styled(Page)`\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tposition: relative;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tmin-height: 400px;\r\n`\r\nconst Chart = styled.div`\r\n\tposition: relative;\r\n\tflex: 1;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n`\r\nconst Selections = styled.div`\r\n\theight: 200px;\r\n\tposition: relative;\r\n`\r\n","import { useState, useCallback, FormEvent } from 'react'\r\nimport { IChoiceGroupOption } from '@fluentui/react'\r\nimport { Renderers } from '../components/Controls/RendererControls'\r\n\r\nexport function useRendererSelection(): [\r\n\tRenderers,\r\n\t(\r\n\t\tevent: FormEvent<HTMLElement | HTMLInputElement> | undefined,\r\n\t\toption?: IChoiceGroupOption,\r\n\t) => void,\r\n] {\r\n\tconst [selectedRenderer, setSelectedRenderer] = useState<Renderers>(\r\n\t\tRenderers.SVG,\r\n\t)\r\n\r\n\tconst onRendererChange = useCallback(\r\n\t\t(\r\n\t\t\tev: FormEvent<HTMLElement | HTMLInputElement> | undefined,\r\n\t\t\toption?: IChoiceGroupOption,\r\n\t\t) => {\r\n\t\t\tif (option) {\r\n\t\t\t\tsetSelectedRenderer(option.key as Renderers)\r\n\t\t\t}\r\n\t\t},\r\n\t\t[setSelectedRenderer],\r\n\t)\r\n\r\n\treturn [selectedRenderer, onRendererChange]\r\n}\r\n","import React, { memo } from 'react'\r\nimport styled from 'styled-components'\r\nimport VisualizePage from '../VisualizePage'\r\n\r\nexport const IndexPage: React.FC = memo(function IndexPage() {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<VisualizePage />\r\n\t\t</Container>\r\n\t)\r\n})\r\n\r\nexport default IndexPage\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex: 1;\r\n\tmax-height: 100%;\r\n\tmax-width: 100%;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tfont-family: 'Gaegu', cursive;\r\n`\r\n","import { createTheme } from '@fluentui/react'\r\n\r\n// Yay pink!\r\nexport const pinkTheme = createTheme({\r\n\tdefaultFontStyle: { fontFamily: \"'Gaegu', cursive\", fontSize: '20px' },\r\n\tpalette: {\r\n\t\tthemePrimary: '#f683ba',\r\n\t\tthemeLighterAlt: '#0a0507',\r\n\t\tthemeLighter: '#27151e',\r\n\t\tthemeLight: '#492738',\r\n\t\tthemeTertiary: '#934e6f',\r\n\t\tthemeSecondary: '#d772a3',\r\n\t\tthemeDarkAlt: '#f68ec0',\r\n\t\tthemeDark: '#f79fca',\r\n\t\tthemeDarker: '#f9b8d7',\r\n\t\tneutralLighterAlt: '#000000',\r\n\t\tneutralLighter: '#000000',\r\n\t\tneutralLight: '#000000',\r\n\t\tneutralQuaternaryAlt: '#000000',\r\n\t\tneutralQuaternary: '#000000',\r\n\t\tneutralTertiaryAlt: '#b30474',\r\n\t\tneutralTertiary: '#c8c8c8',\r\n\t\tneutralSecondary: '#d0d0d0',\r\n\t\tneutralPrimaryAlt: '#dadada',\r\n\t\tneutralPrimary: '#ffffff',\r\n\t\tneutralDark: '#f4f4f4',\r\n\t\tblack: '#f8f8f8',\r\n\t\twhite: '#000000',\r\n\t},\r\n})\r\n","import React, { memo, StrictMode } from 'react'\r\nimport IndexPage from '../IndexPage'\r\nimport { createGlobalStyle } from 'styled-components'\r\nimport './font.css'\r\nimport { loadTheme } from '@fluentui/react'\r\nimport { pinkTheme } from '../../common/theme'\r\nloadTheme(pinkTheme)\r\nconst App: React.FC = memo(function App() {\r\n\treturn (\r\n\t\t<StrictMode>\r\n\t\t\t<GlobalStyle />\r\n\t\t\t<IndexPage />\r\n\t\t</StrictMode>\r\n\t)\r\n})\r\nexport default App\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\thtml {\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tmax-height: 100%;\r\n\t\tmax-width: 100%;\r\n\t\tdisplay: flex;\r\n\t}\r\n  body {\r\n\t\tdisplay: flex;\r\n\t\tflex: 1;\r\n\t\tmargin: 0;\r\n\t\t-webkit-font-smoothing: antialiased;\r\n\t\t-moz-osx-font-smoothing: grayscale;\r\n\t\toverscroll-behavior: none;\r\n\t\tmax-height: 100%;\r\n\t\tmax-width: 100%;\r\n\t}\r\n\t#root {\r\n\t\tflex: 1;\r\n\t\tdisplay: flex;\r\n\t\tmax-height: 100%;\r\n\t\tmax-width: 100%;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tbackground: black;\r\n\t\tcolor: white;\r\n\t}\r\n`\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App/App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}