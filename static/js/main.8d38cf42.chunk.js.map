{"version":3,"sources":["common/styled.ts","components/Controls/RendererControls/RendererControls.tsx","components/Footer/Footer.tsx","components/Controls/ControlledSlider/ControlledSlider.tsx","components/Controls/Controls.tsx","utils/SizedToParent.tsx","utils/useDimensions.ts","components/Chart/hooks/useCallbackRef.ts","components/Chart/PIXI/PixiRenderer.ts","components/Chart/PIXI/PixiContainer.tsx","components/Chart/hooks/usePixiInstance.ts","components/Chart/SVG/D3Renderer.ts","components/Chart/SVG/D3Container.tsx","components/Chart/hooks/useD3Instance.ts","components/Chart/ChartContainer.tsx","hooks/useData.ts","components/VisualizePage/VisualizePage.tsx","hooks/UseRendererSelection.ts","components/IndexPage/IndexPage.tsx","common/theme.ts","components/App/App.tsx","index.tsx"],"names":["Renderers","Flexy","styled","div","Col","Page","Footer","memo","href","title","RendererOptions","key","SVG","text","imageSrc","selectedImageSrc","imageSize","width","height","Canvas","WebGL","RendererControls","selectedRender","onChange","Spacer","ChoiceGroup","selectedKey","options","label","sliderStyles","slideBox","root","display","fontFamily","titleLabel","ControlledSlider","sliderOnChange","sliderValue","sliderSettings","Slider","min","max","step","showValue","snapToStep","value","styles","Controls","onRendererChange","sliderMax","onSliderChange","ControlStyles","DEFAULT_STYLE","position","left","right","top","bottom","overflow","SizedToParent","sizedRef","onResize","children","className","style","defaultRef","useRef","ref","useMemo","dims","useState","dimensions","setDimensions","useEffect","current","rect","getBoundingClientRect","Math","floor","observer","ResizeObserver","entries","entry","newDims","contentRect","observe","disconnect","useDimensions","finalStyle","useCallbackRef","element","setElement","useCallback","node","displayName","PixiRenderer","duration","containerEl","renderer","pixiElement","circleTexture","nodesStage","stage","initialized","spriteMap","rendererType","currDataLength","this","setRenderer","circleTemplate","PIXI","beginFill","lineStyle","drawCircle","endFill","generateTexture","NEAREST","appendChild","view","addChild","pixiRender","forceCanvas","type","CANVAS","console","log","destroy","removeChild","refresh","data","length","enter","updateTransition","forEach","sprite","x","cx","y","cy","r","tint","hex","index","renderPixi","start","performance","now","requestAnimationFrame","tweenRender","newTime","percent","easeCubic","cx1","cy1","render","resize","PixiContainer","setCanvasElement","containerElement","pixiInstance","setPixiInstance","setUpPixi","instance","onRendererSwitch","undefined","getRendererType","remove","usePixiInstance","visible","PixiElement","D3Renderer","svgElementRef","select","selectAll","d","append","attr","fill","fillOpacity","interrupt","transition","D3Container","setD3ContainerElement","d3ChartContainerElement","D3Instance","setD3Instance","setUpSVG","useD3Instance","ChartContainer","ChartStyle","parseColor","color","clean","replace","parseInt","sizeStyles","overflowY","VisualizePage","nodeCount","chartDimensions","setChartDimensions","handleResize","selectedNodeCount","setSelectedNodeCount","onSlider","val","chartData","Array","map","a","interpolatePlasma","random","rate","selectedRenderer","setSelectedRenderer","ev","option","useRendererSelection","Container","Selections","Chart","IndexPage","pinkTheme","createTheme","defaultFontStyle","fontSize","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","loadTheme","App","GlobalStyle","createGlobalStyle","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8d38cf42.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Flexy = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n`\n\nexport const Row = styled(Flexy)`\n\tflex-direction: row;\n`\n\nexport const Col = styled(Flexy)`\n\tflex-direction: column;\n`\n\nexport const Page = styled(Col)`\n\tposition: relative;\n`\n\nexport const Gutter = styled.div`\n\twidth: 50px;\n`\n","import * as React from 'react'\nimport { memo, FormEvent } from 'react'\nimport styled from 'styled-components'\nimport { IChoiceGroupOption, ChoiceGroup } from '@fluentui/react'\n\nexport enum Renderers {\n\tSVG = 'SVG',\n\tCanvas = 'Canvas',\n\tWebGL = 'WebGL',\n}\n\nexport const RendererOptions: IChoiceGroupOption[] = [\n\t{\n\t\tkey: Renderers.SVG,\n\t\ttext: Renderers.SVG,\n\t\timageSrc: '/images/turtle-outline.svg',\n\t\tselectedImageSrc: '/images/turtle.svg',\n\t\timageSize: { width: 32, height: 32 },\n\t},\n\t{\n\t\tkey: Renderers.Canvas,\n\t\ttext: Renderers.Canvas,\n\t\timageSrc: '/images/rabbit-outline.svg',\n\t\tselectedImageSrc: '/images/rabbit.svg',\n\t\timageSize: { width: 32, height: 32 },\n\t},\n\t{\n\t\tkey: Renderers.WebGL,\n\t\ttext: Renderers.WebGL,\n\t\timageSrc: '/images/cheetah-outline.svg',\n\t\tselectedImageSrc: '/images/cheetah.svg',\n\t\timageSize: { width: 32, height: 32 },\n\t},\n]\n\ninterface RendererControlsProps {\n\tselectedRender: string\n\tonChange: (\n\t\tev: FormEvent<HTMLElement | HTMLInputElement> | undefined,\n\t\toption?: IChoiceGroupOption,\n\t) => void\n}\nexport const RendererControls: React.FC<RendererControlsProps> = memo(\n\tfunction RendererControls({ selectedRender, onChange }) {\n\t\treturn (\n\t\t\t<Spacer>\n\t\t\t\t<ChoiceGroup\n\t\t\t\t\tselectedKey={selectedRender}\n\t\t\t\t\toptions={RendererOptions}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tlabel=\"Renderer\"\n\t\t\t\t/>\n\t\t\t</Spacer>\n\t\t)\n\t},\n)\n\nconst Spacer = styled.div`\n\tmargin-left: 10px;\n\tdisplay: inline-table;\n\tfont-family: 'Gaegu', cursive;\n`\n","import React, { memo } from 'react'\n\nexport const Footer: React.FC = memo(function Footer() {\n\treturn (\n\t\t<span>\n\t\t\tIcons made by{' '}\n\t\t\t<a href=\"https://www.flaticon.com/authors/freepik\" title=\"freepik\">\n\t\t\t\tFreepik\n\t\t\t</a>{' '}\n\t\t\tfrom{' '}\n\t\t\t<a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n\t\t\t\twww.flaticon.com\n\t\t\t</a>\n\t\t</span>\n\t)\n})\n","import React, { memo } from 'react'\nimport { Slider, ISliderStyles } from '@fluentui/react'\nimport styled from 'styled-components'\nexport interface SliderSettings {\n\tmin: number\n\tmax: number\n}\ninterface ControlledSliderProps {\n\tsliderOnChange: (value: number) => void\n\tsliderValue: number\n\tsliderSettings: SliderSettings\n}\n\nconst sliderStyles: Partial<ISliderStyles> = {\n\tslideBox: { width: 300 },\n\troot: { display: 'inline-table', fontFamily: \"'Gaegu', cursive\" },\n\ttitleLabel: { fontFamily: \"'Gaegu', cursive\" },\n}\n\nexport const ControlledSlider: React.FC<ControlledSliderProps> = memo(\n\tfunction ControlledSlider({\n\t\tsliderOnChange,\n\t\tsliderValue,\n\t\tsliderSettings,\n\t}: ControlledSliderProps) {\n\t\treturn (\n\t\t\t<Spacer>\n\t\t\t\t<Slider\n\t\t\t\t\tlabel=\"Adjust node count\"\n\t\t\t\t\tmin={sliderSettings.min}\n\t\t\t\t\tmax={sliderSettings.max}\n\t\t\t\t\tstep={1000}\n\t\t\t\t\tshowValue={true}\n\t\t\t\t\tsnapToStep={true}\n\t\t\t\t\tvalue={sliderValue}\n\t\t\t\t\tonChange={sliderOnChange}\n\t\t\t\t\tstyles={sliderStyles}\n\t\t\t\t/>\n\t\t\t</Spacer>\n\t\t)\n\t},\n)\n\nconst Spacer = styled.div`\n\tmargin-left: 10px;\n\tdisplay: inline-table;\n`\n","import React, { memo } from 'react'\nimport styled from 'styled-components'\nimport { IChoiceGroupOption } from '@fluentui/react'\nimport { RendererControls } from './RendererControls'\nimport { ControlledSlider } from './ControlledSlider'\n\ninterface ControlsProps {\n\tselectedRender: string\n\tonRendererChange: (\n\t\tev: React.FormEvent<HTMLElement | HTMLInputElement> | undefined,\n\t\toption?: IChoiceGroupOption,\n\t) => void\n\tsliderMax: number\n\tonSliderChange: (val: number) => void\n}\n\nexport const Controls: React.FC<any> = memo(function Controls({\n\tselectedRender,\n\tonRendererChange,\n\tsliderMax,\n\tonSliderChange,\n}: ControlsProps) {\n\treturn (\n\t\t<ControlStyles>\n\t\t\t<RendererControls\n\t\t\t\tselectedRender={selectedRender}\n\t\t\t\tonChange={onRendererChange}\n\t\t\t/>\n\t\t\t<ControlledSlider\n\t\t\t\tsliderValue={sliderMax}\n\t\t\t\tsliderOnChange={onSliderChange}\n\t\t\t\tsliderSettings={{ min: 500, max: 10000 }}\n\t\t\t/>\n\t\t</ControlStyles>\n\t)\n})\n\nconst ControlStyles = styled.div`\n\tdisplay: 'inline-flex';\n\tmargin-left: 100px;\n`\n","import React, {\n\tmemo,\n\tuseEffect,\n\tuseRef,\n\tMutableRefObject,\n\tuseMemo,\n} from 'react'\nimport { useDimensions } from './useDimensions'\nimport { SizedToParentProps } from './types'\n\nconst DEFAULT_STYLE = {\n\t/* position: absolute so we don't cause the parent element to continually expand */\n\tposition: 'absolute',\n\tleft: 0,\n\tright: 0,\n\ttop: 0,\n\tbottom: 0,\n\toverflow: 'hidden',\n} as React.CSSProperties\n\n/**\n * Provides an element that is sized to its parent, without affecting the size of the parent.\n * It works by creating an element that is out of the layout flow (using position: absolute).\n *\n * Children should be styled with 'width: 100%, height: 100%' or use the onResize event listener to control the size of children or some other combination\n */\nexport const SizedToParent: React.FC<SizedToParentProps> = memo(\n\t({ sizedRef, onResize, children, className, style }: SizedToParentProps) => {\n\t\tconst defaultRef = useRef(null)\n\t\tconst ref: MutableRefObject<HTMLElement | null> = useMemo(\n\t\t\t() => sizedRef || defaultRef,\n\t\t\t[defaultRef, sizedRef],\n\t\t)\n\t\tconst dims = useDimensions(ref)\n\t\tuseEffect(() => {\n\t\t\tif (ref && dims && onResize) {\n\t\t\t\tonResize(dims)\n\t\t\t}\n\t\t}, [ref, dims, onResize])\n\t\tconst finalStyle = useMemo(\n\t\t\t() => ({\n\t\t\t\t...DEFAULT_STYLE,\n\t\t\t\t...(style || {}),\n\t\t\t}),\n\t\t\t[style],\n\t\t)\n\n\t\treturn (\n\t\t\t<div className={className} ref={ref as any} style={finalStyle}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t)\n\t},\n)\nSizedToParent.displayName = 'SizedToParent'\n","import { useState, MutableRefObject, useEffect } from 'react'\nimport ResizeObserver from 'resize-observer-polyfill'\nimport { Dimensions } from './types'\n\n/**\n * A hook for getting the dimensions of the given element\n * This hook also updates when the given element resizes\n * @param ref A ref to the element to measure\n * @returns The dimensions for the element.\n */\nexport function useDimensions(\n\tref: MutableRefObject<HTMLElement | null>,\n): Dimensions | undefined {\n\tconst [dimensions, setDimensions] = useState<Dimensions | undefined>()\n\tuseEffect(() => {\n\t\tif (ref && ref.current) {\n\t\t\tconst rect = ref.current.getBoundingClientRect()\n\t\t\tlet dims: Dimensions = {\n\t\t\t\twidth: Math.floor(rect.width),\n\t\t\t\theight: Math.floor(rect.height),\n\t\t\t}\n\t\t\tsetDimensions(dims)\n\n\t\t\tconst observer = new ResizeObserver(entries => {\n\t\t\t\tconst entry = entries[0]\n\t\t\t\tif (entry) {\n\t\t\t\t\tconst newDims = {\n\t\t\t\t\t\twidth: Math.floor(entry.contentRect.width),\n\t\t\t\t\t\theight: Math.floor(entry.contentRect.height),\n\t\t\t\t\t}\n\t\t\t\t\tif (newDims.width !== dims.width || newDims.height !== dims.height) {\n\t\t\t\t\t\tdims = newDims\n\t\t\t\t\t\tsetDimensions(newDims)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tobserver.observe(ref.current)\n\t\t\treturn () => {\n\t\t\t\tobserver.disconnect()\n\t\t\t}\n\t\t}\n\t}, [ref])\n\treturn dimensions as Dimensions | undefined\n}\n","import { useState, useCallback } from 'react'\n\n/**\n * Use a callback-based element reference. This is useful when the\n * element is required for in-band rendering or effectful measuring.\n *\n */\nexport function useCallbackRef<T>(): [(ref: T) => void, T | null] {\n\tconst [element, setElement] = useState<T | null>(null)\n\tconst refCb = useCallback((node: T) => setElement(node), [setElement])\n\treturn [refCb, element]\n}\n","import * as PIXI from 'pixi.js'\nimport { easeCubic } from 'd3-ease'\nimport { Data } from '../../../hooks/useData'\nimport { Dimensions } from '../../../utils/types'\nimport { Renderers } from '../../Controls/RendererControls'\n\n// @ts-ignore\nexport * from 'pixi.js-legacy'\n// @ts-ignore\nexport * from '@pixi/canvas-renderer'\n\ninterface SpriteMap {\n\t[key: string]: PIXI.Sprite\n}\n\nclass PixiRenderer {\n\tprivate pixiElement: HTMLElement\n\tprivate renderer: PIXI.Renderer | PIXI.CanvasRenderer\n\tprivate circleTexture: PIXI.Texture\n\tprivate nodesStage: PIXI.Container\n\tprivate stage: PIXI.Container\n\tprivate dimensions: Dimensions\n\tprivate duration: number\n\tprivate initialized = false\n\tprivate spriteMap: SpriteMap = {}\n\tprivate rendererType: Renderers\n\tprivate currDataLength = 0\n\n\tconstructor(\n\t\twidth: number,\n\t\theight: number,\n\t\tduration: number,\n\t\tcontainerEl: HTMLDivElement,\n\t\trenderer: Renderers,\n\t) {\n\t\tthis.currDataLength = 0\n\t\tthis.pixiElement = containerEl\n\t\tthis.initialized = false\n\t\tthis.rendererType = renderer\n\t\tthis.duration = duration\n\t\tthis.dimensions = { height, width }\n\t\t// ==== set up pixi stuff\n\t\tthis.renderer = this.setRenderer(renderer, this.dimensions)\n\t\tconst circleTemplate = new PIXI.Graphics()\n\t\t\t.beginFill(0xffffff)\n\t\t\t.lineStyle(0)\n\t\t\t.drawCircle(0, 0, 10)\n\t\t\t.endFill()\n\t\tthis.circleTexture = this.renderer.generateTexture(\n\t\t\tcircleTemplate,\n\t\t\tPIXI.SCALE_MODES.NEAREST,\n\t\t\twidth / height,\n\t\t)\n\t\t// alternatively we could texture from image\n\t\t// this.circleTexture = PIXI.Texture.from('/images/cheetah.svg')\n\t\tthis.pixiElement.appendChild(this.renderer.view)\n\t\tthis.nodesStage = new PIXI.Container()\n\t\tthis.stage = new PIXI.Container()\n\t\tthis.stage.addChild(this.nodesStage)\n\t}\n\n\tprivate setRenderer(renderer: Renderers, dimensions: Dimensions) {\n\t\t// Renderer will choose webGL if supported and failover to canvas\n\t\t// For only canvas renderer use forceCanvas option but only supported with pixi-legacy module\n\t\t// alternatively can use PIXI.Application\n\n\t\tconst pixiRender = PIXI.autoDetectRenderer({\n\t\t\twidth: dimensions.width,\n\t\t\theight: dimensions.height,\n\t\t\tforceCanvas: renderer === Renderers.Canvas,\n\t\t})\n\t\tconst rendererType =\n\t\t\tpixiRender.type === PIXI.RENDERER_TYPE.CANVAS ? 'CANVAS' : 'WEBGL'\n\t\tconsole.log('pixiRenderer', rendererType)\n\t\treturn pixiRender\n\t}\n\n\tpublic getRendererType(): Renderers {\n\t\treturn this.rendererType\n\t}\n\n\tpublic remove(): void {\n\t\tif (this.renderer) {\n\t\t\tthis.stage.destroy({ children: true })\n\t\t\tthis.pixiElement.removeChild(this.renderer.view)\n\t\t\tthis.renderer.destroy(true)\n\t\t\tthis.refresh()\n\t\t}\n\t}\n\n\tprivate refresh(): void {\n\t\tthis.initialized = false\n\t\tthis.spriteMap = {}\n\t\tthis.stage.removeChild(this.nodesStage)\n\t\tthis.nodesStage = new PIXI.Container()\n\t\tthis.stage.addChild(this.nodesStage)\n\t}\n\n\tpublic onRendererSwitch(data: Data[]): void {\n\t\tif (this.currDataLength !== data.length) {\n\t\t\tthis.refresh()\n\t\t\tthis.currDataLength = data.length\n\t\t}\n\t\tif (!this.initialized) {\n\t\t\tthis.enter(data)\n\t\t\tthis.initialized = true\n\t\t\tthis.updateTransition(data)\n\t\t} else {\n\t\t\tthis.updateTransition(data)\n\t\t}\n\t}\n\tprivate enter(data: Data[]): void {\n\t\tconst stage = this.nodesStage\n\t\tdata.forEach(node => {\n\t\t\tconst sprite = new PIXI.Sprite(this.circleTexture)\n\t\t\tsprite.x = node.cx\n\t\t\tsprite.y = node.cy\n\t\t\tsprite.width = node.r * 2\n\t\t\tsprite.height = node.r * 2\n\t\t\tsprite.tint = node.hex\n\t\t\tthis.spriteMap[`${node.index}`] = sprite\n\t\t\tstage.addChild(sprite)\n\t\t})\n\t\tthis.renderPixi()\n\t}\n\n\tprivate updateTransition(data: Data[]) {\n\t\tconst tweenRender = (newTime: number) => {\n\t\t\tconst deltaTime = newTime - start\n\t\t\tconst percent = deltaTime / this.duration\n\t\t\tdata.forEach(node => {\n\t\t\t\tconst sprite = this.spriteMap[`${node.index}`] as PIXI.Sprite\n\t\t\t\t// percent * (current - prev) + prev\n\t\t\t\tconst cx = easeCubic(percent) * (node.cx1 - node.cx) + node.cx\n\t\t\t\tconst cy = easeCubic(percent) * (node.cy1 - node.cy) + node.cy\n\t\t\t\tsprite.x = cx\n\t\t\t\tsprite.y = cy\n\t\t\t\tsprite.width = node.r * 2\n\t\t\t\tsprite.height = node.r * 2\n\t\t\t})\n\t\t\tthis.renderPixi()\n\t\t\tif (percent < 1.0) {\n\t\t\t\trequestAnimationFrame(tweenRender)\n\t\t\t}\n\t\t}\n\t\tconst start = performance.now()\n\t\trequestAnimationFrame(tweenRender)\n\t}\n\tprivate renderPixi(): void {\n\t\tthis.renderer.render(this.stage)\n\t}\n\n\tpublic resize(width: number, height: number): void {\n\t\tthis.dimensions.height = height\n\t\tthis.dimensions.width = width\n\t\tif (this.renderer) {\n\t\t\tthis.renderer.resize(width, height)\n\t\t}\n\t}\n}\nexport default PixiRenderer\n","import React, { memo, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Data } from '../../../hooks/useData'\nimport { useCallbackRef } from '../hooks/useCallbackRef'\nimport { usePixiInstance } from '../hooks/usePixiInstance'\nimport { Renderers } from '../../Controls/RendererControls'\n\nexport interface PixiContainerProps {\n\tdata: Data[]\n\twidth: number\n\theight: number\n\tduration: number\n\trenderer: Renderers\n}\n\nexport const PixiContainer: React.FC<PixiContainerProps> = memo(\n\tfunction PixiContainer({\n\t\tdata,\n\t\twidth,\n\t\theight,\n\t\tduration,\n\t\trenderer,\n\t}: PixiContainerProps) {\n\t\tconst [setCanvasElement, canvasElement] = useCallbackRef<HTMLDivElement>()\n\t\t// setup pixi instance\n\t\tusePixiInstance({\n\t\t\tdata,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tcontainerElement: canvasElement,\n\t\t\tduration,\n\t\t\trenderer,\n\t\t})\n\n\t\tconst style: React.CSSProperties = useMemo(\n\t\t\t() =>\n\t\t\t\t({\n\t\t\t\t\tvisible:\n\t\t\t\t\t\trenderer === Renderers.Canvas || renderer === Renderers.WebGL\n\t\t\t\t\t\t\t? 'visible'\n\t\t\t\t\t\t\t: 'hidden',\n\t\t\t\t} as React.CSSProperties),\n\t\t\t[renderer],\n\t\t)\n\t\treturn (\n\t\t\t<PixiElement\n\t\t\t\tref={setCanvasElement}\n\t\t\t\tclassName=\"canvas-ref\"\n\t\t\t\tstyle={style}\n\t\t\t/>\n\t\t)\n\t},\n)\n\nconst PixiElement = styled.div`\n\tposition: absolute;\n`\n","import { useState, useEffect, useMemo, useCallback } from 'react'\nimport PixiRenderer from '../PIXI/PixiRenderer'\nimport { Dimensions } from '../../../utils/types'\nimport { Data } from '../../../hooks/useData'\nimport { Renderers } from '../../Controls/RendererControls'\n\nexport interface PixiInstance {\n\tdata: Data[]\n\tcontainerElement: HTMLDivElement | null\n\twidth: number\n\theight: number\n\tduration: number\n\trenderer: Renderers\n}\n\nexport function usePixiInstance({\n\tdata,\n\twidth,\n\theight,\n\tcontainerElement,\n\tduration,\n\trenderer,\n}: PixiInstance): PixiRenderer | undefined {\n\tconst [pixiInstance, setPixiInstance] = useState<PixiRenderer | undefined>()\n\n\t// resize canvas on dimension change\n\tconst dimensions: Dimensions = useMemo(() => {\n\t\tif (pixiInstance) {\n\t\t\tpixiInstance.resize(width, height)\n\t\t}\n\t\treturn { width, height }\n\t}, [width, height, pixiInstance])\n\n\tconst setUpPixi = useCallback(\n\t\t(instance?: PixiRenderer) => {\n\t\t\tif (renderer !== Renderers.SVG) {\n\t\t\t\tlet pixiInstance = instance\n\t\t\t\tif (!pixiInstance && containerElement !== null) {\n\t\t\t\t\tpixiInstance = new PixiRenderer(\n\t\t\t\t\t\tdimensions.width,\n\t\t\t\t\t\tdimensions.height,\n\t\t\t\t\t\tduration,\n\t\t\t\t\t\tcontainerElement,\n\t\t\t\t\t\trenderer,\n\t\t\t\t\t)\n\t\t\t\t\tsetPixiInstance(pixiInstance)\n\t\t\t\t}\n\t\t\t\tif (pixiInstance) {\n\t\t\t\t\tpixiInstance.onRendererSwitch(data)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetPixiInstance(undefined)\n\t\t\t}\n\t\t},\n\t\t[containerElement, dimensions, duration, data, renderer],\n\t)\n\n\tuseEffect(() => {\n\t\tif (pixiInstance) {\n\t\t\tconst currentRenderer = pixiInstance.getRendererType()\n\t\t\tif (currentRenderer !== renderer) {\n\t\t\t\tpixiInstance.remove()\n\t\t\t\tsetUpPixi()\n\t\t\t} else {\n\t\t\t\tpixiInstance.onRendererSwitch(data)\n\t\t\t}\n\t\t} else {\n\t\t\tsetUpPixi(pixiInstance)\n\t\t}\n\t}, [pixiInstance, renderer, setUpPixi, data])\n\n\treturn pixiInstance\n}\n","import { select } from 'd3-selection'\nimport 'd3-transition'\nimport { Data } from '../../../hooks/useData'\n\nexport interface D3RendererProps {\n\tduration: number\n\tsvgElementRef: SVGElement\n}\n\nexport class D3Renderer {\n\tprivate duration = 1000\n\tprivate svgElementRef: SVGElement\n\tprivate initialized = false\n\tprivate currDataLength = 0\n\n\tconstructor({ duration, svgElementRef }: D3RendererProps) {\n\t\tthis.duration = duration\n\t\tthis.svgElementRef = svgElementRef\n\t}\n\n\tpublic onRendererSwitch(data: Data[]) {\n\t\tif (this.currDataLength !== data.length) {\n\t\t\tthis.remove()\n\t\t\tthis.currDataLength = data.length\n\t\t}\n\t\tif (!this.initialized) {\n\t\t\tthis.enter(data)\n\t\t\tthis.initialized = true\n\t\t\tthis.updateTransition(data)\n\t\t} else {\n\t\t\tthis.updateTransition(data)\n\t\t}\n\t}\n\n\tprivate enter(data: Data[]) {\n\t\tconst svg = select(this.svgElementRef)\n\t\treturn svg\n\t\t\t.selectAll('.d3-node')\n\t\t\t.data(data, (d: any) => d.index)\n\t\t\t.enter()\n\t\t\t.append('circle')\n\t\t\t.attr('class', 'd3-node')\n\t\t\t.attr('cx', (d: Data) => d.cx)\n\t\t\t.attr('cy', (d: Data) => d.cy)\n\t\t\t.attr('r', (d: Data) => d.r)\n\t\t\t.attr('fill', (d: Data) => d.fill)\n\t\t\t.attr('fill-opacity', (d: Data) => d.fillOpacity)\n\t}\n\n\tprivate updateTransition(data: Data[]) {\n\t\tconst svg = select(this.svgElementRef)\n\t\tsvg\n\t\t\t.selectAll('.d3-node')\n\t\t\t.data(data, (d: any) => d.index)\n\t\t\t.interrupt()\n\t\t\t.transition()\n\t\t\t.duration(this.duration)\n\t\t\t.attr('cx', (d: Data) => d.cx1)\n\t\t\t.attr('cy', (d: Data) => d.cy1)\n\t}\n\n\tpublic remove() {\n\t\tconst svg = select(this.svgElementRef)\n\t\tsvg.selectAll('*').remove()\n\t\tthis.initialized = false\n\t}\n}\n","import React, { memo, useMemo } from 'react'\nimport { useCallbackRef } from '../hooks/useCallbackRef'\nimport { Data } from '../../../hooks/useData'\nimport { Renderers } from '../../Controls/RendererControls'\nimport { useD3Instance } from '../hooks/useD3Instance'\nexport interface D3RendererProps {\n\tdata: Data[]\n\tduration: number\n\trenderer: Renderers\n\twidth: number\n\theight: number\n}\nexport const D3Container: React.FC<D3RendererProps> = memo(\n\tfunction D3Container({\n\t\tdata,\n\t\tduration,\n\t\trenderer,\n\t\twidth,\n\t\theight,\n\t}: D3RendererProps) {\n\t\t// Get Refs for SVG Elements\n\t\tconst [setD3ContainerElement, d3ChartContainerElement] = useCallbackRef<\n\t\t\tSVGGElement\n\t\t>()\n\n\t\tuseD3Instance({\n\t\t\tdata,\n\t\t\tduration,\n\t\t\trenderer,\n\t\t\tcontainerElement: d3ChartContainerElement,\n\t\t})\n\n\t\tconst style = useMemo(\n\t\t\t() =>\n\t\t\t\t({\n\t\t\t\t\tvisible: renderer === Renderers.SVG ? 'visible' : 'hidden',\n\t\t\t\t} as React.CSSProperties),\n\t\t\t[renderer],\n\t\t)\n\n\t\treturn (\n\t\t\t<div style={style}>\n\t\t\t\t<svg width={width} height={height}>\n\t\t\t\t\t<g ref={setD3ContainerElement} className=\"svg-test\"></g>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t)\n\t},\n)\n","import { useState, useEffect, useCallback } from 'react'\nimport { Data } from '../../../hooks/useData'\nimport { Renderers } from '../../Controls/RendererControls'\nimport PixiRenderer from '../PIXI/PixiRenderer'\nimport { D3Renderer } from '../SVG/D3Renderer'\n\nexport interface D3Instance {\n\tdata: Data[]\n\tcontainerElement: SVGGElement | null\n\tduration: number\n\trenderer: Renderers\n}\n\nexport function useD3Instance({\n\tdata,\n\tcontainerElement,\n\tduration,\n\trenderer,\n}: D3Instance): D3Renderer | undefined {\n\tconst [D3Instance, setD3Instance] = useState<D3Renderer | undefined>()\n\n\tconst setUpSVG = useCallback(\n\t\t(instance?: PixiRenderer) => {\n\t\t\tif (!instance && containerElement !== null) {\n\t\t\t\tconst D3Instance = new D3Renderer({\n\t\t\t\t\tduration,\n\t\t\t\t\tsvgElementRef: containerElement,\n\t\t\t\t})\n\t\t\t\tsetD3Instance(D3Instance)\n\t\t\t}\n\t\t},\n\t\t[containerElement, duration],\n\t)\n\n\tuseEffect(() => {\n\t\tif (D3Instance) {\n\t\t\tif (renderer !== Renderers.SVG) {\n\t\t\t\tD3Instance.remove()\n\t\t\t} else {\n\t\t\t\tD3Instance.onRendererSwitch(data)\n\t\t\t}\n\t\t} else {\n\t\t\tsetUpSVG(D3Instance)\n\t\t}\n\t}, [D3Instance, renderer, setUpSVG, data])\n\n\treturn D3Instance\n}\n","import React, { memo } from 'react'\nimport styled from 'styled-components'\nimport { Renderers } from '../Controls/RendererControls/RendererControls'\nimport { Data } from '../../hooks/useData'\nimport { PixiContainer } from './PIXI/PixiContainer'\nimport { D3Container } from './SVG/D3Container'\n\nconst DURATION = 1000\nexport interface ChartContainerProps {\n\tdata: Data[]\n\twidth: number\n\theight: number\n\trenderer: Renderers\n}\n\nexport const ChartContainer: React.FC<ChartContainerProps> = memo(\n\tfunction ChartContainer({\n\t\tdata,\n\t\twidth,\n\t\theight,\n\t\trenderer,\n\t}: ChartContainerProps) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{' '}\n\t\t\t\t<ChartStyle>\n\t\t\t\t\t<PixiContainer\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\theight={height}\n\t\t\t\t\t\tduration={DURATION}\n\t\t\t\t\t\trenderer={renderer}\n\t\t\t\t\t/>\n\t\t\t\t\t<D3Container\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\theight={height}\n\t\t\t\t\t\tduration={DURATION}\n\t\t\t\t\t\trenderer={renderer}\n\t\t\t\t\t/>\n\t\t\t\t</ChartStyle>\n\t\t\t</>\n\t\t)\n\t},\n)\n\nconst ChartStyle = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tposition: relative;\n\tdisplay: inline-flex;\n`\n","import { useMemo } from 'react'\nimport { interpolatePlasma } from 'd3-scale-chromatic'\nimport { Dimensions } from '../utils/types'\n\nconst MAX_RADIUS = 8\nconst MAX_RATE = 10\n\nexport interface Data {\n\tindex: number\n\trate: number\n\tr: number\n\tfillOpacity: number\n\tcx: number\n\tcy: number\n\tcx1: number\n\tcy1: number\n\tfill: string\n\thex: number\n}\n\nexport function useData(nodeCount: number, dimensions?: Dimensions): Data[] {\n\treturn useMemo(() => {\n\t\tif (dimensions) {\n\t\t\tconst { height, width } = dimensions\n\t\t\tconst dataset = new Array(nodeCount).fill(1).map((a, index) => {\n\t\t\t\tconst color = interpolatePlasma(Math.random())\n\t\t\t\treturn {\n\t\t\t\t\tindex,\n\t\t\t\t\trate: 1 + Math.random() * MAX_RATE,\n\t\t\t\t\tr: 1 + Math.random() * MAX_RADIUS,\n\t\t\t\t\tfillOpacity: 1.0,\n\t\t\t\t\tcx: Math.random() * width,\n\t\t\t\t\tcy: Math.random() * height,\n\t\t\t\t\tcx1: Math.random() * width,\n\t\t\t\t\tcy1: Math.random() * height,\n\t\t\t\t\tfill: color,\n\t\t\t\t\thex: parseColor(color),\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn dataset\n\t\t}\n\t\treturn []\n\t}, [nodeCount, dimensions])\n}\n\nconst parseColor = (color: string) => {\n\tconst clean = color.replace('#', '')\n\treturn parseInt(clean, 16)\n}\n","import React, { memo, useCallback, useState } from 'react'\nimport { Page } from '../../common/styled'\nimport styled from 'styled-components'\nimport { Footer } from '../Footer'\nimport { Controls } from '../Controls/Controls'\nimport { SizedToParent } from '../../utils/SizedToParent'\nimport { Dimensions } from '../../utils/types'\nimport { ChartContainer } from '../Chart/'\nimport { useRendererSelection } from '../../hooks/UseRendererSelection'\nimport { useData } from '../../hooks/useData'\nconst sizeStyles = { overflowY: 'hidden' } as React.CSSProperties\n\nexport const VisualizePage: React.FC<any> = memo(function VisualizePage() {\n\t// get dimensions from ref\n\tconst [chartDimensions, setChartDimensions] = useState<\n\t\tDimensions | undefined\n\t>(undefined)\n\n\tconst handleResize = useCallback(\n\t\t({ width, height }: Dimensions) => {\n\t\t\tsetChartDimensions({ width, height })\n\t\t},\n\t\t[setChartDimensions],\n\t)\n\n\tconst [selectedNodeCount, setSelectedNodeCount] = useState<number>(2000)\n\tconst onSlider = useCallback(\n\t\t(val: number) => {\n\t\t\tsetSelectedNodeCount(val)\n\t\t},\n\t\t[setSelectedNodeCount],\n\t)\n\n\tconst chartData = useData(selectedNodeCount, chartDimensions)\n\n\tconst [selectedRenderer, onRendererChange] = useRendererSelection()\n\n\treturn (\n\t\t<Container>\n\t\t\t<Selections>\n\t\t\t\t<Controls\n\t\t\t\t\tselectedRender={selectedRenderer}\n\t\t\t\t\tonRendererChange={onRendererChange}\n\t\t\t\t\tonSliderChange={onSlider}\n\t\t\t\t\tsliderMax={selectedNodeCount}\n\t\t\t\t/>\n\t\t\t</Selections>\n\t\t\t<Chart>\n\t\t\t\t<SizedToParent style={sizeStyles} onResize={handleResize}>\n\t\t\t\t\t{chartData.length > 0 && chartDimensions ? (\n\t\t\t\t\t\t<ChartContainer\n\t\t\t\t\t\t\twidth={chartDimensions.width}\n\t\t\t\t\t\t\theight={chartDimensions.height}\n\t\t\t\t\t\t\tdata={chartData}\n\t\t\t\t\t\t\trenderer={selectedRenderer}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<></>\n\t\t\t\t\t)}\n\t\t\t\t</SizedToParent>\n\t\t\t</Chart>\n\t\t\t<Footer />\n\t\t</Container>\n\t)\n})\n\nconst Container = styled(Page)`\n\tmargin: 0;\n\tpadding: 0;\n\tposition: relative;\n\theight: 100%;\n\twidth: 100%;\n\tmin-height: 400px;\n`\nconst Chart = styled.div`\n\tposition: relative;\n\tflex: 1;\n\theight: 100%;\n\twidth: 100%;\n`\nconst Selections = styled.div`\n\theight: 200px;\n\tposition: relative;\n`\n","import { useState, useCallback, FormEvent } from 'react'\nimport { IChoiceGroupOption } from '@fluentui/react'\nimport { Renderers } from '../components/Controls/RendererControls'\n\nexport function useRendererSelection(): [\n\tRenderers,\n\t(\n\t\tevent: FormEvent<HTMLElement | HTMLInputElement> | undefined,\n\t\toption?: IChoiceGroupOption,\n\t) => void,\n] {\n\tconst [selectedRenderer, setSelectedRenderer] = useState<Renderers>(\n\t\tRenderers.SVG,\n\t)\n\n\tconst onRendererChange = useCallback(\n\t\t(\n\t\t\tev: FormEvent<HTMLElement | HTMLInputElement> | undefined,\n\t\t\toption?: IChoiceGroupOption,\n\t\t) => {\n\t\t\tif (option) {\n\t\t\t\tsetSelectedRenderer(option.key as Renderers)\n\t\t\t}\n\t\t},\n\t\t[setSelectedRenderer],\n\t)\n\n\treturn [selectedRenderer, onRendererChange]\n}\n","import React, { memo } from 'react'\nimport styled from 'styled-components'\nimport VisualizePage from '../VisualizePage'\n\nexport const IndexPage: React.FC = memo(function IndexPage() {\n\treturn (\n\t\t<Container>\n\t\t\t<VisualizePage />\n\t\t</Container>\n\t)\n})\n\nexport default IndexPage\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tmax-height: 100%;\n\tmax-width: 100%;\n\twidth: 100%;\n\theight: 100%;\n\tfont-family: 'Gaegu', cursive;\n`\n","import { createTheme } from '@fluentui/react'\n\n// Yay pink!\nexport const pinkTheme = createTheme({\n\tdefaultFontStyle: { fontFamily: \"'Gaegu', cursive\", fontSize: '20px' },\n\tpalette: {\n\t\tthemePrimary: '#f683ba',\n\t\tthemeLighterAlt: '#0a0507',\n\t\tthemeLighter: '#27151e',\n\t\tthemeLight: '#492738',\n\t\tthemeTertiary: '#934e6f',\n\t\tthemeSecondary: '#d772a3',\n\t\tthemeDarkAlt: '#f68ec0',\n\t\tthemeDark: '#f79fca',\n\t\tthemeDarker: '#f9b8d7',\n\t\tneutralLighterAlt: '#000000',\n\t\tneutralLighter: '#000000',\n\t\tneutralLight: '#000000',\n\t\tneutralQuaternaryAlt: '#000000',\n\t\tneutralQuaternary: '#000000',\n\t\tneutralTertiaryAlt: '#b30474',\n\t\tneutralTertiary: '#c8c8c8',\n\t\tneutralSecondary: '#d0d0d0',\n\t\tneutralPrimaryAlt: '#dadada',\n\t\tneutralPrimary: '#ffffff',\n\t\tneutralDark: '#f4f4f4',\n\t\tblack: '#f8f8f8',\n\t\twhite: '#000000',\n\t},\n})\n","import React, { memo, StrictMode } from 'react'\nimport IndexPage from '../IndexPage'\nimport { createGlobalStyle } from 'styled-components'\nimport './font.css'\nimport { loadTheme } from '@fluentui/react'\nimport { pinkTheme } from '../../common/theme'\nloadTheme(pinkTheme)\nconst App: React.FC = memo(function App() {\n\treturn (\n\t\t<StrictMode>\n\t\t\t<GlobalStyle />\n\t\t\t<IndexPage />\n\t\t</StrictMode>\n\t)\n})\nexport default App\n\nconst GlobalStyle = createGlobalStyle`\n\thtml {\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tmax-height: 100%;\n\t\tmax-width: 100%;\n\t\tdisplay: flex;\n\t}\n  body {\n\t\tdisplay: flex;\n\t\tflex: 1;\n\t\tmargin: 0;\n\t\t-webkit-font-smoothing: antialiased;\n\t\t-moz-osx-font-smoothing: grayscale;\n\t\toverscroll-behavior: none;\n\t\tmax-height: 100%;\n\t\tmax-width: 100%;\n\t}\n\t#root {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tmax-height: 100%;\n\t\tmax-width: 100%;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tbackground: black;\n\t\tcolor: white;\n\t}\n`\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}